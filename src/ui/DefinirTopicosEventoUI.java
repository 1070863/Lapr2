package ui;

import eventoscientificos.Empresa;
import eventoscientificos.Evento;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import controller.*;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.security.auth.callback.ConfirmationCallback;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.JTextField;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 * Janela de interface gráfica para a definição de tópicos de Evento.
 *
 * @author Grupo 66 LAPR2
 */
public class DefinirTopicosEventoUI extends javax.swing.JDialog {

    private DefinirTopicEventController m_controllerDTE;
    private Evento eventoSelected;
    private static Empresa m_empresa;
    private static String strId;
    private static final int JANELA_POSICAO_X = 500;
    private static final int JANELA_POSICAO_Y = 100;

    /**
     * Cria a janela gráfica de definição de tópicos.
     */
    public DefinirTopicosEventoUI(javax.swing.JFrame pai, boolean modal, Empresa m_empresa, String strId) {
        super(pai, "Definir Tópicos de Evento", modal);
        initComponents();
        this.m_controllerDTE = new DefinirTopicEventController(m_empresa);

        inicializa(strId);

        pack();
        setResizable(false);
        setLocation(JANELA_POSICAO_X, JANELA_POSICAO_Y);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jComboBox1 = new javax.swing.JComboBox();
        lblEvento = new javax.swing.JLabel();
        jcbEventos = new javax.swing.JComboBox();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jtfCodACM = new javax.swing.JTextField();
        lblTopico = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblEvento.setText("Evento:");

        jcbEventos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jInternalFrame2.setTitle("Definir Tópicos de Evento");
        jInternalFrame2.setVisible(true);

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 152, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Definir Tópicos De Evento");

        lblTopico.setText("Introduza o código ACM:");

        btnAdicionar.setText("Procurar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Terminar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTopico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfCodACM, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdicionar)
                        .addGap(47, 47, 47)
                        .addComponent(btnCancelar)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTopico)
                    .addComponent(jtfCodACM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnCancelar))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Trata o evento gerado pelo botão Adicionar, enviando a informação à
     * controller para procurar o código solicitado.
     *
     * @param evt evento gerado pelo botão adicionar
     */
    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        String resultado = "";
        try {
            resultado = this.m_controllerDTE.procurarTopicoACM(jtfCodACM.getText());

        } catch (ParserConfigurationException ex) {
            Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (XPathExpressionException ex) {
            Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (resultado.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Não existe o código que introduziu", "Definir Tópicos de Evento", ERROR_MESSAGE);
            jtfCodACM.setText("");
            jtfCodACM.removeAll();
        } else {
            int confirma = JOptionPane.showConfirmDialog(null,
                    resultado + "\n\nAdicionar Tópico a Evento?", "Confirmar Tópico", ConfirmationCallback.YES_NO_OPTION);
            if (confirma == 0) {
                if (m_controllerDTE.registaTopico()) {
                    JOptionPane.showMessageDialog(null, "Tópico adicionado com sucesso.");
                    jtfCodACM.setText("");
                    jtfCodACM.removeAll();
                } else {
                    JOptionPane.showMessageDialog(null, "O Tópico não foi adicionado.\n "
                            + "Já consta no Evento", "Adicionar Tópico", ERROR_MESSAGE);
                    jtfCodACM.setText("");
                    jtfCodACM.removeAll();
                }
            }
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    /**
     * Trata o evento gerado pelo botão Terminar.
     *
     * @param evt evento gerado pelo botão terminar
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int confirma = JOptionPane.showConfirmDialog(this,
                "Terminar Definição de Tópicos de Evento?", "Confirmar", ConfirmationCallback.YES_NO_OPTION);
        if (confirma == 0) {
            this.m_controllerDTE.termina();
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Código gerdo pelo editor de interface gráfica.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DefinirTopicosEventoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DefinirTopicosEventoUI dialog = new DefinirTopicosEventoUI(new javax.swing.JFrame(), true, m_empresa, strId);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JComboBox jcbEventos;
    private javax.swing.JTextField jtfCodACM;
    private javax.swing.JLabel lblEvento;
    private javax.swing.JLabel lblTopico;
    // End of variables declaration//GEN-END:variables

    /**
     * Classe que inicializa o processo de definição de tópicos de evento.
     *
     * @param strId id do organizador
     */
    public void inicializa(String strId) {
        List<Evento> le = this.m_controllerDTE.getEventosOrganizador(strId);
        eventoSelected = apresentaEventosOrganizador(le);
        m_controllerDTE.setEvento(eventoSelected);

    }

    /**
     * Apresenta a lista de eventos do é Organizador e permite selecionar o
     * Evento para o qual irá adicionar tópicos.
     *
     * @param le lista de eventos do Organizador
     * @return Evento para o qual deve ser adicionados os tópicos
     */
    private Evento apresentaEventosOrganizador(List<Evento> le) {
        String[] lstEventos = new String[le.size()];
        for (int i = 0; i < lstEventos.length; i++) {
            lstEventos[i] = le.get(i).getM_strTitulo();
        }

        String eventoSelected = (String) JOptionPane.showInputDialog(this,
                "Selecione o Evento",
                "Selecionar Evento",
                JOptionPane.QUESTION_MESSAGE,
                null,
                lstEventos,
                lstEventos[0]);

        Evento e = null;
        for (int i = 0; i < le.size(); i++) {
            if (le.get(i).getM_strTitulo().equalsIgnoreCase(eventoSelected)) {
                e = le.get(i);
            }
        }
        return e;
    }

}
